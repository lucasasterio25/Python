import json
import urllib
import pandas as pd
import requests
from sqlalchemy import create_engine

#conecta no banco
server = '10.23.2.41'
database = 'BI_STAGE'
username = 'user_mis'
password = '2Z6ADWKE'
params = urllib.parse.quote_plus(r'DRIVER={ODBC Driver 13 for SQL Server};SERVER='+server+';DATABASE='+database+';UID='+username+';PWD='+ password)
conn_str = 'mssql+pyodbc:///?odbc_connect={}'.format(params)
engine = create_engine(conn_str)
myRequest=requests.get('http://bpm-hml.interfile.com.br/vt_solicitation/vt_solicitation/vt-report-ms?aberto=true&aprovado=true&reprovado=true&pendencia=true&dtinicio=20180101&dtFim=20300130')
myList = json.loads(myRequest.content.decode('utf-8'))
#carrega pendentes
df = pd.DataFrame(data=myList['abertos'])
listasPend = []
listauser = []
for itemPend in df['solicitationResponseDtos']:
    idPend = itemPend['id']
    listaPend = {'alterDate' : itemPend['alterDate'],'channelReception' : itemPend['channelReception'],'comment' : itemPend['comment'],'creationDate' : itemPend['creationDate'],'digitalDocuments' : itemPend['digitalDocuments'], 'donnors' : itemPend['donnors'], 'entryMailbox' : itemPend['entryMailbox'], 'id' : itemPend['id'],'isVisibleForEdit' : itemPend['isVisibleForEdit'], 'operator' : itemPend['operator'],'protocolNumber' : itemPend['protocolNumber'], 'solicitationAddress' : itemPend['solicitationAddress'],'solicitationStatus' : itemPend['solicitationStatus'], 'transferees' : itemPend['transferees'],'Id_Abertos' : idPend}
    listasPend.append(listaPend)    
    #carrega solicitationAddress
    pendentesuser = pd.DataFrame.from_dict(itemPend['userResponseDto'], orient='index')
    pendentesuser = pendentesuser.T
    for index, item in pendentesuser.iterrows():
        listasuser = {'addresses' : item['addresses'],'documentType' : item['documentType'],'documentValue' : item['documentValue'],'email' : item['email'],'id' : item['id'],'name' : item['name'],'password' : item['password'],'phones' : item['phones'],'Id_abertos' : idPend}
        listauser.append(listasuser)
#carrega o dataframe no banco
pendentes = pd.DataFrame(listasPend)
pendentesuser = pd.DataFrame(listauser)
#pendentes.to_sql(name='STG_VIVO_TRASS_ABERTOS',con=engine, if_exists='replace',index=False)
#pendentesuser.to_sql(name='STG_VIVO_TRASS_USER_RESPONSE_ABERTOS',con=engine, if_exists='replace',index=False)